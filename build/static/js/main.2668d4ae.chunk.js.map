{"version":3,"sources":["utilities/avatars.js","components/MyModal.js","components/MyMessage.js","components/MessageList.js","components/ClientItem.js","components/ConnectionsList.js","components/chat.js","App.js","index.js"],"names":["avatars","MyModal","showModal","handleCloseModal","clientsNames","useState","showAlert","setShowAlert","avatarUrl","holder","Modal","show","animation","Header","Title","className","Body","Container","Row","InputGroup","FormControl","placeholder","aria-label","aria-describedby","value","onChange","ev","preventDefault","target","handleChange","Alert","Icon","name","ButtonGroup","toggle","e","slice","map","avatar","i","Col","xs","md","ToggleButton","type","defaultChecked","Image","src","rounded","fluid","Footer","Button","variant","onClick","find","c","username","newUser","MyMessage","msg","currentUser","user","message","time","isOwn","authorName","date","imgUrl","MessageList","msgHistory","currentMsg","handleFormChange","handleSendMessage","key","maxLength","Append","animated","disabled","Content","visible","hidden","ClientItem","client","roundedCircle","ConnectionsList","connList","length","socket","io","process","PORT","Chat","setCurrentMsg","setMsgHistory","setUser","setShowModal","clientsList","setClientsList","useEffect","on","connectedClients","newMsg","prev","document","title","close","Date","toLocaleTimeString","emit","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2668d4ae.chunk.js","sourcesContent":["const avatars = [\n  'https://res.cloudinary.com/dgmvbx86i/image/upload/v1591006944/mystery-man_flrhdt.jpg',\n  'https://res.cloudinary.com/dgmvbx86i/image/upload/v1590661790/man_dqk5c7.png',\n  'https://res.cloudinary.com/dgmvbx86i/image/upload/v1590661790/girl_xo2bcr.png',\n  'https://res.cloudinary.com/dgmvbx86i/image/upload/v1590661790/man-1_wpd5yz.png',\n  'https://res.cloudinary.com/dgmvbx86i/image/upload/v1590661790/boy-1_xrmk5f.png',\n  'https://res.cloudinary.com/dgmvbx86i/image/upload/v1590661790/girl-1_d88b6c.png',\n  'https://res.cloudinary.com/dgmvbx86i/image/upload/v1590661790/man-4_kdcc2u.png',\n];\n\nexport default avatars;\n","import {\n  FormControl,\n  InputGroup,\n  Button,\n  Modal,\n  ButtonGroup,\n  ToggleButton,\n  Image,\n  Row,\n  Col,\n  Container,\n  Alert,\n} from 'react-bootstrap';\nimport React, { useState } from 'react';\nimport { Icon } from 'semantic-ui-react';\nimport avatars from \"../utilities/avatars\";\n\nconst MyModal = ({ showModal, handleCloseModal, clientsNames }) => {\n  const [showAlert, setShowAlert] = useState(false);\n  let avatarUrl = 0;\n  let holder = '';\n\n  const handleChange = (ev) => {\n    ev.preventDefault();\n    holder = ev.target.value;\n  };\n\n  const handleSubmit = () => {\n    const isNameExists = clientsNames.find((c) => c.username === holder);\n    if (isNameExists || holder === '') {\n      setShowAlert(true);\n    } else {\n      const newUser = { username: holder, avatar: avatars[avatarUrl] };\n      handleCloseModal(newUser);\n    }\n  };\n\n  const handleAvatar = (event) => {\n    avatarUrl = event.target.value\n  };\n\n  return (\n    <Modal show={showModal} animation>\n      <Modal.Header>\n        <Modal.Title className=\"modal-title\">Come chat with us</Modal.Title>\n      </Modal.Header>\n      <hr />\n      <Modal.Body>\n        <Container>\n          <Row>\n            <label><hr />Enter your name</label>\n          </Row>\n          <Row>\n            <InputGroup className=\"user-form\">\n              <FormControl\n                className=\"user-form\"\n                placeholder=\"Username\"\n                aria-label=\"Username\"\n                aria-describedby=\"basic-addon1\"\n                value={holder.value}\n                onChange={(ev) => (handleChange(ev))}\n              />\n            </InputGroup>\n          </Row>\n          <Row>\n            <Alert className=\"no-name\" show={showAlert}><Icon name=\"x\" />Choose other username</Alert>\n          </Row>\n          <Row>\n            <label><hr />Choose the avatar you like</label>\n          </Row>\n          <Row>\n            <ButtonGroup toggle onChange={(e) => handleAvatar(e)}>\n              {avatars.slice(1).map((avatar, i) => (\n                <Col xs={2} md={2}>\n                  <ToggleButton className=\"avatar-button\" type=\"radio\" defaultChecked value={i + 1}>\n                    <Image src={avatars[i + 1]} rounded fluid />\n                  </ToggleButton>\n                </Col>\n              ))}\n            </ButtonGroup>\n          </Row>\n        </Container>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button className=\"start-button\" variant=\"primary\" onClick={handleSubmit}>\n          <Icon className=\"msg-icon\" name=\"chat\" />Let`s start talking!\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default MyModal;\n","import React from 'react';\nimport { Avatar, Message, MessageText } from '@livechat/ui-kit';\n\nconst MyMessage = ({ msg, currentUser }) => {\n  const { user, message, time } = msg;\n\n  return (\n    (user.username === '')\n      ? <div className=\"user-left\">{message}</div>\n      : (\n        <>\n          <Message isOwn={user.username === currentUser} authorName={user.username} date={time}>\n            <Avatar imgUrl={user.avatar} />\n            <MessageText className={user.username === currentUser ? 'own' : 'not-own'}>{message}</MessageText>\n          </Message>\n        </>\n      )\n  );\n};\n\nexport default MyMessage;\n","import React from 'react';\nimport { Container, FormControl, InputGroup } from 'react-bootstrap';\nimport { Button, Icon } from 'semantic-ui-react';\nimport { Message, MessageText } from '@livechat/ui-kit';\nimport MyMessage from './MyMessage';\n\nconst MessageList = ({ msgHistory, user, currentMsg, handleFormChange, handleSendMessage }) => (\n  <>\n    <Container className=\"message-list-container\">\n      {msgHistory.map((message, i) => ((i > 0 && msgHistory[i - 1].user.username === message.user.username)\n        ? (\n          <Message isOwn={user.username === message.user.username}>\n            <MessageText className={user.username === message.user.username ? 'own' : 'not-own'}>{message.message}</MessageText>\n          </Message>\n        )\n        : <MyMessage key={message.message} msg={message} currentUser={user.username} />))}\n    </Container>\n    <Container className=\"message-text-container\">\n      <InputGroup className=\"mb-3\">\n        <FormControl\n          className=\"message-input\"\n          placeholder=\"Text a message\"\n          value={currentMsg}\n          maxLength=\"70\"\n          onChange={(ev) => handleFormChange(ev)}\n        />\n        <InputGroup.Append>\n          <Button animated onClick={(e) => handleSendMessage(e)} disabled={currentMsg === ''}>\n            <Button.Content visible>Send</Button.Content>\n            <Button.Content hidden>\n              <Icon name=\"send\" />\n            </Button.Content>\n          </Button>\n        </InputGroup.Append>\n      </InputGroup>\n    </Container>\n  </>\n\n);\n\nexport default MessageList;\n","import React from 'react';\nimport { Image } from 'react-bootstrap';\n\nconst ClientItem = ({ client, currentUser }) => (\n  <>\n    <Image\n      className=\"part-image\"\n      roundedCircle\n      src={client.avatar}\n    />\n    {(currentUser.username === client.username) ? `${currentUser.username} (You)` : client.username}\n  </>\n);\n\nexport default ClientItem;\n","import React from 'react';\nimport ClientItem from './ClientItem';\n\nconst ConnectionsList = ({ connList, currentUser }) => {\n  if (connList.length !== 0) {\n    return (\n      <>\n        <h2 className=\"connections\">Participants</h2>\n        <ul className=\"participants\">\n          {connList.map((client) => <li key={client.user}><ClientItem client={client} currentUser={currentUser} /></li>)}\n        </ul>\n      </>\n    );\n  }\n  return <></>;\n};\n\nexport default ConnectionsList;\n","import React, { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport { Container } from 'react-bootstrap';\nimport MyModal from './MyModal';\nimport MessageList from './MessageList';\nimport ConnectionsList from './ConnectionsList';\n\nconst socket = io(process.env.PORT);\n\nconst Chat = () => {\n  const [currentMsg, setCurrentMsg] = useState('');\n  const [msgHistory, setMsgHistory] = useState([]);\n  const [user, setUser] = useState({ username: '', avatar: '' });\n  const [showModal, setShowModal] = useState(true);\n  const [clientsList, setClientsList] = useState([]);\n\n  useEffect(() => {\n    socket.on('CONNECTIONS_CHANGE', (connectedClients) => {\n      setClientsList(connectedClients);\n    });\n    socket.on('RECEIVE_MSG', (newMsg) => {\n      setMsgHistory((prev) => [...prev, newMsg]);\n    });\n    document.title = 'Awesome Chat';\n    return () => socket.close();\n  }, []);\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n    const time = new Date().toLocaleTimeString();\n    socket.emit('SEND_MSG', { message: currentMsg, time, user });\n    setCurrentMsg('');\n  };\n\n  const handleCloseModal = (newUser) => {\n    setShowModal(false);\n    setUser(newUser);\n    socket.emit('SEND_USER_DETAILS', newUser);\n  };\n\n  const handleFormChange = (ev) => {\n    setCurrentMsg(ev.target.value);\n  };\n\n  return (\n    <Container className=\"main-page\">\n      <Container className=\"main-container\">\n        <Container className=\"connections-list-container\">\n          <ConnectionsList currentUser={user} connList={clientsList} />\n        </Container>\n        <Container className=\"inner-container\">\n          <MessageList\n            msgHistory={msgHistory}\n            user={user}\n            currentMsg={currentMsg}\n            handleFormChange={handleFormChange}\n            handleSendMessage={sendMessage}\n          />\n        </Container>\n      </Container>\n      <MyModal\n        showModal={showModal}\n        handleCloseModal={handleCloseModal}\n        clientsNames={clientsList}\n      />\n    </Container>\n  );\n};\n\nexport default Chat;\n","import React from 'react';\nimport { ThemeProvider } from '@livechat/ui-kit';\nimport Chat from './components/chat';\n\n\nconst App = () => (\n  <ThemeProvider>\n    <Chat />\n  </ThemeProvider>\n);\n\nexport default App;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport 'semantic-ui-css/semantic.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}